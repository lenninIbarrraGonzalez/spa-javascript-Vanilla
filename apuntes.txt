inicio mi proyecto crando la carpeta cientifico
git init
npm init

instalamos dependencias necesarias 

@babel/core : incluye toda la libreria de babel.

babel-loader : Este paquete permite transpilar archivos JavaScript utilizando Babel y webpack .

html-webpack-plugin: Permite copiar los archivos HTML del proyecto.

webpack-cli: Permite manejar ciertos comandos

webpack-dev-server : Permite crear un entorno de desarrollo local para probar los cambios que se esta realizando.

–save-dev : Permite instalar un conjunto de dependencia en la modalidad de desarrollo para el archivo packet json

npm install @babel/core babel-loader html-webpack-plugin webpack webpack-cli webpack-dev-server --save-dev

Creamos el archivo --configuración del proyecto
webpack.config.json

crear el .gitignore
node_modules

ignorar esta carpeta para  no enviar estos cambios al repositorio

Cramos unos script para trabajar con el servidor de desarrollo local en le package.json

buil => compilar el proyecto para enviarlo a producción
start => habilita el ambiente local para hacer pruebas

"scripts": {
    "build": "webpack --modo production",
    "start": "webpack-dev-server --open --mode development"
  },

para correr los comandos 

npm run build

este compila el codigo en una carpeta llamada dist

Creamos home.js el cual tiene un template literal

Creamos la carpeta template 
no es una pagina pero es un template que se puede reutilizar

creamos el Header.js

despues vamos a pages y creamos character.js

Creamos la Pagina 404

En routes creamos un archivo index.js
importamos los template y las paginas para hacer render
por buena practica no es  neceario colocar el .js
cramos las rutas que vamos a menejar en la aplicación
construimos un manejador
const router = async () => {
  const header = null || document.getElementById('header');
  const content = null || document.getElementById('content');

  header.innerHTML = await Header();
};

empujar el header a la aplicación
exportamos router

en el index.js principal llamamos a importamos router y colocamos un evento que escuche a load 


creamos en utils getHash.js donde estaran las rutas

location --  haceder a un elemento del explorador locaation
hash -- obtener el hash  #/1
slide(1) -- elimianmos un elemento #
toLocateLowerCase() -- lo regeresamos en minusculas
split("/") -- cortamos el / ['', 1 , '']
[1] -- utilizamos la posición numero uno

location.hash.slide(1).toLocateLowerCase().split("/")[1] || "/";

creamos un arcivo que resuelve la rutas

instalamos un paquete para manejar los construimos

npm install copy-webpack-plugin --save-dev


en webpack config

const CopyWebpackPlugin = require("copy-webpack-plugin");

